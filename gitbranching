git --version

To signoff on particular user
git config --global user.name "kiran Toram"
git config --global user.email "kiran@code.net"

mkdir git-work-flow
subl .		# launch sublime in current directory
git init .	# initialises on master branch from scratch 
git status 	# show all untracked files in staging area
By default git doesnot track all files, you need to add to staging area using git add 
git add README.md
git status

git commit -m "created our first Readme.md"
git log #shows all the commits
git diff README.md	#shows all changes done to a particular file
git show <commitid> # shows what all changes done 



git Branching
----------------------------
- git branch
- git checkout
- git checkout -b
- git commit -am

Each piece of code or feature to a developer
Isolate code base and merge later
git branch develop
git branch		#Displays Branches
git checkout develop 	#switch to develop from master branch
git status		#To Display changes done
git checkout -b feature/
git commit -am "something new"  # add & commit in one command
git log 			# Displays no of commits

git checkout master
git checkout develop
git checkout -b feature/new-feature # new way of creating branch referncing existing branch ex based on develop


Git Merging & Workflow
-----------------------
git branch
git checkout develop
git merge feature/new-feature 	#merges feature branch to develop branch
git log
git show 6ea139a


GIT: Git Flow Feature Branch and Pushing to Github
--------------------------------------------------
git branch
git flow feature start a-new-feature	#creates feature branch
git status
git add -A
git commit -am "added new feature"
git checkout develop
git checkout feature/a-new-feature

Add public key to github to push your code from local machine to gitub automatically
ssh-keygen -t rsa -C 'kiranimpressario@gmail.com' #creates key value pair
cd ~/.ssh
cat id_rsa.pub
paste in github settings ssh keys

cd ~/Repositories/git-work-flow
git remote add origin git@github.com:zacksiri/git-work-flow.git
git remote -v				#Display remote repository configured
git checkout master			# changes to local master branch
git push origin master			#pushes local master branch to github repository
git push origin develop 		# pushes develop branch to repo
git flow feature publish a-new-feature 	# pushes feature branch to repo

git commit -am " updated the feature"
git push origin feature/a-new-feature 	#you can use this command as well instead of git flow command 


Pull Request, Merge and uplaod to develop branch
------------------------------------------------
git status    #check if any untracked or uncommited files 
git flow feature finish a-new-feature
git push origin develop

-----------------------
git log --oneline --all --graph --decorate
